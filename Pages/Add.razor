@page "/add"

@using InventoryProject.Data
@using Newtonsoft.Json
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<EditForm Model="@device_Add" OnSubmit="@(()=>AddData())">
    <DataAnnotationsValidator />
  
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Device Type</span>
        </div>
        <input type="text" @bind="@device_Add.DevType" /><span><small><ValidationMessage For="@(()=>device_Add.DevType)"/></small></span>
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Device Type Other</span>
        </div>
        <input type="text" @bind="@device_Add.DevTypeOther"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Make</span>
        </div>
        <input type="text" @bind="@device_Add.Make"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Model</span>
        </div>
        <input type="text" @bind="@device_Add.Model" />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Owner</span>
        </div>
        <input type="text" @bind="@device_Add.Owner" />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Location</span>
        </div>
        <input type="text" @bind="@device_Add.Location"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Serial</span>
        </div>
        <input type="text" @bind="@device_Add.Serial"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Purchase Date</span>
        </div>
        <input type="datetime" @bind="@device_Add.PurchaseDate"/>
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Warranty Expiry Date</span>
        </div>
        <input type="datetime" @bind="@device_Add.WarrantyExpDate" />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Service Expiry Date</span>
        </div>
        <input type="datetime" @bind="@device_Add.ServiceExpDate" />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Value</span>
        </div>
        <input type="number" @bind="@device_Add.Value"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Size</span>
        </div>
        <input type="number" @bind="@device_Add.Size"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Toner</span>
        </div>
        <input type="number" @bind="@device_Add.Toner"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Mac Address</span>
        </div>
        <input type="number" @bind="@device_Add.MacAddress" />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">IP Address</span>
        </div>
        <input type="number" @bind="@device_Add.IPAddress"  />
    </div>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text">Cell Number</span>
        </div>
        <input type="number" @bind="@device_Add.CellNumber" />
    </div>
  

    <button type="submit">Submit</button>
    <button type="reset" onclick="window.location.reload(true)">Reset</button>


</EditForm>



@code {

    Device_Add device_Add = new Device_Add();


    private async Task AddData()
    {

        var tokenKey = new[]
        {
            new KeyValuePair<string,string>("token","A12F7A58-842D-4111-A44D-5F8C4E1AA521"),
            new KeyValuePair<string,string>("DevType",device_Add.DevType),
            new KeyValuePair<string,string>("DevTypeOther",device_Add.DevTypeOther),
            new KeyValuePair<string,string>("Make",device_Add.Make),
            new KeyValuePair<string,string>("Model",device_Add.Model),
            new KeyValuePair<string,string>("Owner",device_Add.Owner),
            new KeyValuePair<string,string>("Location",device_Add.Location),
            new KeyValuePair<string,string>("Serial",device_Add.Serial),
            new KeyValuePair<string,string>("PurchaseDate",device_Add.PurchaseDate.ToString()),
            new KeyValuePair<string,string>("WarrantyExpDate",device_Add.WarrantyExpDate.ToString()),
            new KeyValuePair<string,string>("ServiceExpDate",device_Add.ServiceExpDate.ToString()),
            new KeyValuePair<string,string>("Value",device_Add.Value.ToString()),
            new KeyValuePair<string,string>("Size",device_Add.Size.ToString()),
            new KeyValuePair<string,string>("Toner",device_Add.Toner.ToString()),
            new KeyValuePair<string,string>("MacAddress",device_Add.MacAddress.ToString()),
            new KeyValuePair<string,string>("IPAddress",device_Add.IPAddress.ToString()),
            new KeyValuePair<string,string>("CellNumber",device_Add.CellNumber.ToString())

        };
        


        string apiUrl = "https://tools.brandinstitute.com/wsInventory/wsInventory.asmx/Device_Add";

        var httpResponse = await Http.PostAsync(apiUrl, new FormUrlEncodedContent(tokenKey));


        if (httpResponse.IsSuccessStatusCode)
        {
            InventoryAPIResponse inventoryAPIResponseData = JsonConvert.DeserializeObject<InventoryAPIResponse>(await httpResponse.Content.ReadAsStringAsync());
            await Task.Run(() => JSRuntime.InvokeVoidAsync("alert", $"'{inventoryAPIResponseData.Msg}','{inventoryAPIResponseData.Total}','{inventoryAPIResponseData.Data}'"));
            NavManager.NavigateTo("/", true);
;
        }

    }

}
